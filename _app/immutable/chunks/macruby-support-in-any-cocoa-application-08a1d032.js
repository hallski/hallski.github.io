import{S as fr,i as dr,s as mr,k as r,q as s,a as m,l as o,m as n,r as l,h as t,c as _,n as i,F as Pt,b as h,D as e,B as Vs}from"./index-57d6417f.js";function _r(hr){let v,St,D,At,Nt,N,kt,gt,k,Ct,It,et,O,Mt,tt,g,W,F,f,L,Rt,xt,T,Dt,Ot,V,Wt,Ft,B,Lt,Tt,G,Vt,Bt,q,Gt,qt,H,Ht,zt,z,Xt,Yt,X,Zt,Jt,Y,Kt,Qt,Z,Ut,$t,J,ea,ta,K,aa,sa,Q,la,ra,U,oa,at,j,na,Ze,ia,ca,st,$,pa,lt,ee,ua,rt,te,ha,ot,ae,se,Bs,nt,le,fa,it,re,oe,Gs,ct,P,da,Je,ma,_a,pt,C,ne,ie,p,ce,ya,va,pe,ba,Ea,ue,wa,ja,he,Pa,Sa,fe,Aa,Na,de,ka,ga,me,Ca,Ia,_e,Ma,Ra,ye,xa,Da,ve,Oa,Wa,be,Fa,La,Ee,Ta,Va,we,Ba,Ga,je,qa,Ha,Pe,za,Xa,Se,Ya,Za,Ae,Ja,Ka,Ne,Qa,Ua,ke,$a,es,ge,ts,as,Ce,ss,ls,Ie,rs,os,ut,b,ns,Ke,is,cs,Qe,ps,us,Ue,hs,fs,ht,I,Me,Re,y,M,ds,xe,ms,_s,De,ys,vs,Oe,bs,w,Es,We,ws,js,Fe,Ps,Ss,As,Le,Ns,ks,Te,gs,Cs,ft,Ve,Is,dt,Be,Ge,qs,mt,qe,Ms,_t,He,ze,Hs,yt,S,Rs,R,xs,Ds,vt,Xe,Os,bt,x,$e,Ws,Fs;return{c(){v=r("p"),St=s("Yesterday I published a post about "),D=r("a"),At=s("Cocoa Prototyping with Webview"),Nt=s(" and today I found out about "),N=r("a"),kt=s("Macruby"),gt=s(" thanks to "),k=r("a"),Ct=s("@sarnesjo"),It=s(". Already looking for ways of prototyping in Cocoa it’s hard to not find Macruby very interesting."),et=m(),O=r("p"),Mt=s("Macruby turns out to be a very powerful tool for prototyping (as well as writing entire applications in) as it fits perfectly fine in a normal Objective-C code base. What I wanted was something like this:"),tt=m(),g=r("div"),W=r("div"),F=r("pre"),f=r("code"),L=r("span"),Rt=s("class"),xt=s(" "),T=r("span"),Dt=s("SimpleController"),Ot=s(`
    `),V=r("span"),Wt=s("attr_accessor"),Ft=s(" "),B=r("span"),Lt=s(":label"),Tt=s(`
    `),G=r("span"),Vt=s("attr_accessor"),Bt=s(" "),q=r("span"),Gt=s(":button"),qt=s(`
    `),H=r("span"),Ht=s("attr_accessor"),zt=s(" "),z=r("span"),Xt=s(":my_view"),Yt=s(`

    `),X=r("span"),Zt=s("def"),Jt=s(" "),Y=r("span"),Kt=s("buttonPressed"),Qt=s("("),Z=r("span"),Ut=s("sender"),$t=s(`)
        label.setStringValue(`),J=r("span"),ea=s('"I am (im)pressed!"'),ta=s(`)
        my_view.backgroundColor = `),K=r("span"),aa=s("NSColor"),sa=s(`.redColor
    `),Q=r("span"),la=s("end"),ra=s(`
`),U=r("span"),oa=s("end"),at=m(),j=r("p"),na=s("Where the view "),Ze=r("code"),ia=s(":my_view"),ca=s(" is implemented in Objective-C."),st=m(),$=r("p"),pa=s("Here are the simple steps I used to hook it into a normal Xcode Cocoa project."),lt=m(),ee=r("p"),ua=s("First of all, install Macruby which is as easy as downloading the zip-file from the website and run the installer."),rt=m(),te=r("p"),ha=s("In order to link to the Macruby framework you need to use garbage collection in your project, if you aren’t already you enable it in the project inspector:"),ot=m(),ae=r("p"),se=r("img"),nt=m(),le=r("p"),fa=s("Next you need to make your project link against the Macruby framework:"),it=m(),re=r("p"),oe=r("img"),ct=m(),P=r("p"),da=s("That’s it for the project settings, let’s hook it up in the code. When you use the built-in project template for a Macruby project a small Ruby file called "),Je=r("em"),ma=s("rb_main.rb"),_a=s(" is created for you. Since I’m using a generic Cocoa application template I needed to create this file and simply copied the file into my new project (its code below). It loads all Ruby files in your bundle and starts the Cocoa main loop."),pt=m(),C=r("div"),ne=r("div"),ie=r("pre"),p=r("code"),ce=r("span"),ya=s("# Loading the Cocoa framework. If you need to load more frameworks, you can"),va=s(`
`),pe=r("span"),ba=s("# do that here too."),Ea=s(`
framework `),ue=r("span"),wa=s("'Cocoa'"),ja=s(`

`),he=r("span"),Pa=s("# Loading all the Ruby project files."),Sa=s(`
dir_path = `),fe=r("span"),Aa=s("NSBundle"),Na=s(`.mainBundle.resourcePath.fileSystemRepresentation
`),de=r("span"),ka=s("Dir"),ga=s(".entries(dir_path).each "),me=r("span"),Ca=s("do"),Ia=s(" |"),_e=r("span"),Ma=s("path"),Ra=s(`|
  `),ye=r("span"),xa=s("if"),Da=s(" path != "),ve=r("span"),Oa=s("File"),Wa=s(".basename("),be=r("span"),Fa=s("__FILE__"),La=s(") "),Ee=r("span"),Ta=s("and"),Va=s(" path[-"),we=r("span"),Ba=s("3"),Ga=s("..-"),je=r("span"),qa=s("1"),Ha=s("] == "),Pe=r("span"),za=s("'.rb'"),Xa=s(`
    `),Se=r("span"),Ya=s("require"),Za=s(`(path)
  `),Ae=r("span"),Ja=s("end"),Ka=s(`
`),Ne=r("span"),Qa=s("end"),Ua=s(`

`),ke=r("span"),$a=s("# Starting the Cocoa main loop."),es=s(`
`),ge=r("span"),ts=s("NSApplicationMain"),as=s("("),Ce=r("span"),ss=s("0"),ls=s(", "),Ie=r("span"),rs=s("nil"),os=s(")"),ut=m(),b=r("p"),ns=s("To start the actual Ruby interpreter the file "),Ke=r("em"),is=s("main.m"),cs=s(" needs to be modified. Since the Ruby code now starts the Cocoa main loop we no longer need to do that in "),Qe=r("code"),ps=s("main"),us=s(". "),Ue=r("em"),hs=s("Main.m"),fs=s(" simply becomes:"),ht=m(),I=r("div"),Me=r("div"),Re=r("pre"),y=r("code"),M=r("span"),ds=s("#import "),xe=r("span"),ms=s("<MacRuby/MacRuby.h>"),_s=s(`

`),De=r("span"),ys=s("int"),vs=s(" "),Oe=r("span"),bs=s("main"),w=r("span"),Es=s("("),We=r("span"),ws=s("int"),js=s(" argc, "),Fe=r("span"),Ps=s("char"),Ss=s(" *argv[])"),As=s(`
{
    `),Le=r("span"),Ns=s("return"),ks=s(" macruby_main("),Te=r("span"),gs=s('"rb_main.rb"'),Cs=s(`, argc, argv);
}`),ft=m(),Ve=r("p"),Is=s("With these changes you can now start writing code in either Ruby or Objective-C within the same project. Here are the files I ended up with in my very small example."),dt=m(),Be=r("p"),Ge=r("img"),mt=m(),qe=r("p"),Ms=s("The final application simply shows a small window with a button:"),_t=m(),He=r("p"),ze=r("img"),yt=m(),S=r("p"),Rs=s("Make sure to watch the great "),R=r("a"),xs=s("introductionary screencast"),Ds=s(" then download the example project and get started tinkering."),vt=m(),Xe=r("p"),Os=s("If you find this as cool and useful as I did, let me hear about it!"),bt=m(),x=r("p"),$e=r("strong"),Ws=s("Edit:"),Fs=s(" Be sure to read Laurents comment below for an alternative way of loading your Ruby files into your application."),this.h()},l(a){v=o(a,"P",{});var c=n(v);St=l(c,"Yesterday I published a post about "),D=o(c,"A",{href:!0});var zs=n(D);At=l(zs,"Cocoa Prototyping with Webview"),zs.forEach(t),Nt=l(c," and today I found out about "),N=o(c,"A",{href:!0,rel:!0});var Xs=n(N);kt=l(Xs,"Macruby"),Xs.forEach(t),gt=l(c," thanks to "),k=o(c,"A",{href:!0,rel:!0});var Ys=n(k);Ct=l(Ys,"@sarnesjo"),Ys.forEach(t),It=l(c,". Already looking for ways of prototyping in Cocoa it’s hard to not find Macruby very interesting."),c.forEach(t),et=_(a),O=o(a,"P",{});var Zs=n(O);Mt=l(Zs,"Macruby turns out to be a very powerful tool for prototyping (as well as writing entire applications in) as it fits perfectly fine in a normal Objective-C code base. What I wanted was something like this:"),Zs.forEach(t),tt=_(a),g=o(a,"DIV",{class:!0});var Js=n(g);W=o(Js,"DIV",{class:!0});var Ks=n(W);F=o(Ks,"PRE",{class:!0});var Qs=n(F);f=o(Qs,"CODE",{});var d=n(f);L=o(d,"SPAN",{class:!0});var Us=n(L);Rt=l(Us,"class"),Us.forEach(t),xt=l(d," "),T=o(d,"SPAN",{class:!0});var $s=n(T);Dt=l($s,"SimpleController"),$s.forEach(t),Ot=l(d,`
    `),V=o(d,"SPAN",{class:!0});var el=n(V);Wt=l(el,"attr_accessor"),el.forEach(t),Ft=l(d," "),B=o(d,"SPAN",{class:!0});var tl=n(B);Lt=l(tl,":label"),tl.forEach(t),Tt=l(d,`
    `),G=o(d,"SPAN",{class:!0});var al=n(G);Vt=l(al,"attr_accessor"),al.forEach(t),Bt=l(d," "),q=o(d,"SPAN",{class:!0});var sl=n(q);Gt=l(sl,":button"),sl.forEach(t),qt=l(d,`
    `),H=o(d,"SPAN",{class:!0});var ll=n(H);Ht=l(ll,"attr_accessor"),ll.forEach(t),zt=l(d," "),z=o(d,"SPAN",{class:!0});var rl=n(z);Xt=l(rl,":my_view"),rl.forEach(t),Yt=l(d,`

    `),X=o(d,"SPAN",{class:!0});var ol=n(X);Zt=l(ol,"def"),ol.forEach(t),Jt=l(d," "),Y=o(d,"SPAN",{class:!0});var nl=n(Y);Kt=l(nl,"buttonPressed"),nl.forEach(t),Qt=l(d,"("),Z=o(d,"SPAN",{class:!0});var il=n(Z);Ut=l(il,"sender"),il.forEach(t),$t=l(d,`)
        label.setStringValue(`),J=o(d,"SPAN",{class:!0});var cl=n(J);ea=l(cl,'"I am (im)pressed!"'),cl.forEach(t),ta=l(d,`)
        my_view.backgroundColor = `),K=o(d,"SPAN",{class:!0});var pl=n(K);aa=l(pl,"NSColor"),pl.forEach(t),sa=l(d,`.redColor
    `),Q=o(d,"SPAN",{class:!0});var ul=n(Q);la=l(ul,"end"),ul.forEach(t),ra=l(d,`
`),U=o(d,"SPAN",{class:!0});var hl=n(U);oa=l(hl,"end"),hl.forEach(t),d.forEach(t),Qs.forEach(t),Ks.forEach(t),Js.forEach(t),at=_(a),j=o(a,"P",{});var Et=n(j);na=l(Et,"Where the view "),Ze=o(Et,"CODE",{});var fl=n(Ze);ia=l(fl,":my_view"),fl.forEach(t),ca=l(Et," is implemented in Objective-C."),Et.forEach(t),st=_(a),$=o(a,"P",{});var dl=n($);pa=l(dl,"Here are the simple steps I used to hook it into a normal Xcode Cocoa project."),dl.forEach(t),lt=_(a),ee=o(a,"P",{});var ml=n(ee);ua=l(ml,"First of all, install Macruby which is as easy as downloading the zip-file from the website and run the installer."),ml.forEach(t),rt=_(a),te=o(a,"P",{});var _l=n(te);ha=l(_l,"In order to link to the Macruby framework you need to use garbage collection in your project, if you aren’t already you enable it in the project inspector:"),_l.forEach(t),ot=_(a),ae=o(a,"P",{});var yl=n(ae);se=o(yl,"IMG",{src:!0,alt:!0}),yl.forEach(t),nt=_(a),le=o(a,"P",{});var vl=n(le);fa=l(vl,"Next you need to make your project link against the Macruby framework:"),vl.forEach(t),it=_(a),re=o(a,"P",{});var bl=n(re);oe=o(bl,"IMG",{src:!0,alt:!0}),bl.forEach(t),ct=_(a),P=o(a,"P",{});var wt=n(P);da=l(wt,"That’s it for the project settings, let’s hook it up in the code. When you use the built-in project template for a Macruby project a small Ruby file called "),Je=o(wt,"EM",{});var El=n(Je);ma=l(El,"rb_main.rb"),El.forEach(t),_a=l(wt," is created for you. Since I’m using a generic Cocoa application template I needed to create this file and simply copied the file into my new project (its code below). It loads all Ruby files in your bundle and starts the Cocoa main loop."),wt.forEach(t),pt=_(a),C=o(a,"DIV",{class:!0});var wl=n(C);ne=o(wl,"DIV",{class:!0});var jl=n(ne);ie=o(jl,"PRE",{class:!0});var Pl=n(ie);p=o(Pl,"CODE",{});var u=n(p);ce=o(u,"SPAN",{class:!0});var Sl=n(ce);ya=l(Sl,"# Loading the Cocoa framework. If you need to load more frameworks, you can"),Sl.forEach(t),va=l(u,`
`),pe=o(u,"SPAN",{class:!0});var Al=n(pe);ba=l(Al,"# do that here too."),Al.forEach(t),Ea=l(u,`
framework `),ue=o(u,"SPAN",{class:!0});var Nl=n(ue);wa=l(Nl,"'Cocoa'"),Nl.forEach(t),ja=l(u,`

`),he=o(u,"SPAN",{class:!0});var kl=n(he);Pa=l(kl,"# Loading all the Ruby project files."),kl.forEach(t),Sa=l(u,`
dir_path = `),fe=o(u,"SPAN",{class:!0});var gl=n(fe);Aa=l(gl,"NSBundle"),gl.forEach(t),Na=l(u,`.mainBundle.resourcePath.fileSystemRepresentation
`),de=o(u,"SPAN",{class:!0});var Cl=n(de);ka=l(Cl,"Dir"),Cl.forEach(t),ga=l(u,".entries(dir_path).each "),me=o(u,"SPAN",{class:!0});var Il=n(me);Ca=l(Il,"do"),Il.forEach(t),Ia=l(u," |"),_e=o(u,"SPAN",{class:!0});var Ml=n(_e);Ma=l(Ml,"path"),Ml.forEach(t),Ra=l(u,`|
  `),ye=o(u,"SPAN",{class:!0});var Rl=n(ye);xa=l(Rl,"if"),Rl.forEach(t),Da=l(u," path != "),ve=o(u,"SPAN",{class:!0});var xl=n(ve);Oa=l(xl,"File"),xl.forEach(t),Wa=l(u,".basename("),be=o(u,"SPAN",{class:!0});var Dl=n(be);Fa=l(Dl,"__FILE__"),Dl.forEach(t),La=l(u,") "),Ee=o(u,"SPAN",{class:!0});var Ol=n(Ee);Ta=l(Ol,"and"),Ol.forEach(t),Va=l(u," path[-"),we=o(u,"SPAN",{class:!0});var Wl=n(we);Ba=l(Wl,"3"),Wl.forEach(t),Ga=l(u,"..-"),je=o(u,"SPAN",{class:!0});var Fl=n(je);qa=l(Fl,"1"),Fl.forEach(t),Ha=l(u,"] == "),Pe=o(u,"SPAN",{class:!0});var Ll=n(Pe);za=l(Ll,"'.rb'"),Ll.forEach(t),Xa=l(u,`
    `),Se=o(u,"SPAN",{class:!0});var Tl=n(Se);Ya=l(Tl,"require"),Tl.forEach(t),Za=l(u,`(path)
  `),Ae=o(u,"SPAN",{class:!0});var Vl=n(Ae);Ja=l(Vl,"end"),Vl.forEach(t),Ka=l(u,`
`),Ne=o(u,"SPAN",{class:!0});var Bl=n(Ne);Qa=l(Bl,"end"),Bl.forEach(t),Ua=l(u,`

`),ke=o(u,"SPAN",{class:!0});var Gl=n(ke);$a=l(Gl,"# Starting the Cocoa main loop."),Gl.forEach(t),es=l(u,`
`),ge=o(u,"SPAN",{class:!0});var ql=n(ge);ts=l(ql,"NSApplicationMain"),ql.forEach(t),as=l(u,"("),Ce=o(u,"SPAN",{class:!0});var Hl=n(Ce);ss=l(Hl,"0"),Hl.forEach(t),ls=l(u,", "),Ie=o(u,"SPAN",{class:!0});var zl=n(Ie);rs=l(zl,"nil"),zl.forEach(t),os=l(u,")"),u.forEach(t),Pl.forEach(t),jl.forEach(t),wl.forEach(t),ut=_(a),b=o(a,"P",{});var A=n(b);ns=l(A,"To start the actual Ruby interpreter the file "),Ke=o(A,"EM",{});var Xl=n(Ke);is=l(Xl,"main.m"),Xl.forEach(t),cs=l(A," needs to be modified. Since the Ruby code now starts the Cocoa main loop we no longer need to do that in "),Qe=o(A,"CODE",{});var Yl=n(Qe);ps=l(Yl,"main"),Yl.forEach(t),us=l(A,". "),Ue=o(A,"EM",{});var Zl=n(Ue);hs=l(Zl,"Main.m"),Zl.forEach(t),fs=l(A," simply becomes:"),A.forEach(t),ht=_(a),I=o(a,"DIV",{class:!0});var Jl=n(I);Me=o(Jl,"DIV",{class:!0});var Kl=n(Me);Re=o(Kl,"PRE",{class:!0});var Ql=n(Re);y=o(Ql,"CODE",{});var E=n(y);M=o(E,"SPAN",{class:!0});var Ls=n(M);ds=l(Ls,"#import "),xe=o(Ls,"SPAN",{class:!0});var Ul=n(xe);ms=l(Ul,"<MacRuby/MacRuby.h>"),Ul.forEach(t),Ls.forEach(t),_s=l(E,`

`),De=o(E,"SPAN",{class:!0});var $l=n(De);ys=l($l,"int"),$l.forEach(t),vs=l(E," "),Oe=o(E,"SPAN",{class:!0});var er=n(Oe);bs=l(er,"main"),er.forEach(t),w=o(E,"SPAN",{class:!0});var Ye=n(w);Es=l(Ye,"("),We=o(Ye,"SPAN",{class:!0});var tr=n(We);ws=l(tr,"int"),tr.forEach(t),js=l(Ye," argc, "),Fe=o(Ye,"SPAN",{class:!0});var ar=n(Fe);Ps=l(ar,"char"),ar.forEach(t),Ss=l(Ye," *argv[])"),Ye.forEach(t),As=l(E,`
{
    `),Le=o(E,"SPAN",{class:!0});var sr=n(Le);Ns=l(sr,"return"),sr.forEach(t),ks=l(E," macruby_main("),Te=o(E,"SPAN",{class:!0});var lr=n(Te);gs=l(lr,'"rb_main.rb"'),lr.forEach(t),Cs=l(E,`, argc, argv);
}`),E.forEach(t),Ql.forEach(t),Kl.forEach(t),Jl.forEach(t),ft=_(a),Ve=o(a,"P",{});var rr=n(Ve);Is=l(rr,"With these changes you can now start writing code in either Ruby or Objective-C within the same project. Here are the files I ended up with in my very small example."),rr.forEach(t),dt=_(a),Be=o(a,"P",{});var or=n(Be);Ge=o(or,"IMG",{src:!0,alt:!0}),or.forEach(t),mt=_(a),qe=o(a,"P",{});var nr=n(qe);Ms=l(nr,"The final application simply shows a small window with a button:"),nr.forEach(t),_t=_(a),He=o(a,"P",{});var ir=n(He);ze=o(ir,"IMG",{src:!0,alt:!0}),ir.forEach(t),yt=_(a),S=o(a,"P",{});var jt=n(S);Rs=l(jt,"Make sure to watch the great "),R=o(jt,"A",{href:!0,rel:!0});var cr=n(R);xs=l(cr,"introductionary screencast"),cr.forEach(t),Ds=l(jt," then download the example project and get started tinkering."),jt.forEach(t),vt=_(a),Xe=o(a,"P",{});var pr=n(Xe);Os=l(pr,"If you find this as cool and useful as I did, let me hear about it!"),pr.forEach(t),bt=_(a),x=o(a,"P",{});var Ts=n(x);$e=o(Ts,"STRONG",{});var ur=n($e);Ws=l(ur,"Edit:"),ur.forEach(t),Fs=l(Ts," Be sure to read Laurents comment below for an alternative way of loading your Ruby files into your application."),Ts.forEach(t),this.h()},h(){i(D,"href","/blog/cocoa-prototyping-with-webview"),i(N,"href","http://www.macruby.org/"),i(N,"rel","nofollow"),i(k,"href","http://twitter.com/sarnesjo"),i(k,"rel","nofollow"),i(L,"class","hljs-keyword"),i(T,"class","hljs-title class_"),i(V,"class","hljs-built_in"),i(B,"class","hljs-symbol"),i(G,"class","hljs-built_in"),i(q,"class","hljs-symbol"),i(H,"class","hljs-built_in"),i(z,"class","hljs-symbol"),i(X,"class","hljs-keyword"),i(Y,"class","hljs-title function_"),i(Z,"class","hljs-params"),i(J,"class","hljs-string"),i(K,"class","hljs-title class_"),i(Q,"class","hljs-keyword"),i(U,"class","hljs-keyword"),i(F,"class","highlight"),i(W,"class","highlight"),i(g,"class","highlighter-rouge language-ruby"),Pt(se.src,Bs="/images/posts/macruby-in-xcode-gc.png")||i(se,"src",Bs),i(se,"alt","Set the project to use Garbage Collection"),Pt(oe.src,Gs="/images/posts/macruby-in-xcode-add-framework.png")||i(oe,"src",Gs),i(oe,"alt","Add the Macruby framework"),i(ce,"class","hljs-comment"),i(pe,"class","hljs-comment"),i(ue,"class","hljs-string"),i(he,"class","hljs-comment"),i(fe,"class","hljs-title class_"),i(de,"class","hljs-title class_"),i(me,"class","hljs-keyword"),i(_e,"class","hljs-params"),i(ye,"class","hljs-keyword"),i(ve,"class","hljs-title class_"),i(be,"class","hljs-variable constant_"),i(Ee,"class","hljs-keyword"),i(we,"class","hljs-number"),i(je,"class","hljs-number"),i(Pe,"class","hljs-string"),i(Se,"class","hljs-keyword"),i(Ae,"class","hljs-keyword"),i(Ne,"class","hljs-keyword"),i(ke,"class","hljs-comment"),i(ge,"class","hljs-title class_"),i(Ce,"class","hljs-number"),i(Ie,"class","hljs-literal"),i(ie,"class","highlight"),i(ne,"class","highlight"),i(C,"class","highlighter-rouge language-ruby"),i(xe,"class","hljs-string"),i(M,"class","hljs-meta"),i(De,"class","hljs-type"),i(Oe,"class","hljs-title function_"),i(We,"class","hljs-type"),i(Fe,"class","hljs-type"),i(w,"class","hljs-params"),i(Le,"class","hljs-keyword"),i(Te,"class","hljs-string"),i(Re,"class","highlight"),i(Me,"class","highlight"),i(I,"class","highlighter-rouge language-c"),Pt(Ge.src,qs="/images/posts/macruby-in-xcode-files.png")||i(Ge,"src",qs),i(Ge,"alt","Example Files"),Pt(ze.src,Hs="/images/posts/macruby-in-xcode-example.png")||i(ze,"src",Hs),i(ze,"alt","Example window"),i(R,"href","http://pragmaticstudio.com/screencasts/6-macruby"),i(R,"rel","nofollow")},m(a,c){h(a,v,c),e(v,St),e(v,D),e(D,At),e(v,Nt),e(v,N),e(N,kt),e(v,gt),e(v,k),e(k,Ct),e(v,It),h(a,et,c),h(a,O,c),e(O,Mt),h(a,tt,c),h(a,g,c),e(g,W),e(W,F),e(F,f),e(f,L),e(L,Rt),e(f,xt),e(f,T),e(T,Dt),e(f,Ot),e(f,V),e(V,Wt),e(f,Ft),e(f,B),e(B,Lt),e(f,Tt),e(f,G),e(G,Vt),e(f,Bt),e(f,q),e(q,Gt),e(f,qt),e(f,H),e(H,Ht),e(f,zt),e(f,z),e(z,Xt),e(f,Yt),e(f,X),e(X,Zt),e(f,Jt),e(f,Y),e(Y,Kt),e(f,Qt),e(f,Z),e(Z,Ut),e(f,$t),e(f,J),e(J,ea),e(f,ta),e(f,K),e(K,aa),e(f,sa),e(f,Q),e(Q,la),e(f,ra),e(f,U),e(U,oa),h(a,at,c),h(a,j,c),e(j,na),e(j,Ze),e(Ze,ia),e(j,ca),h(a,st,c),h(a,$,c),e($,pa),h(a,lt,c),h(a,ee,c),e(ee,ua),h(a,rt,c),h(a,te,c),e(te,ha),h(a,ot,c),h(a,ae,c),e(ae,se),h(a,nt,c),h(a,le,c),e(le,fa),h(a,it,c),h(a,re,c),e(re,oe),h(a,ct,c),h(a,P,c),e(P,da),e(P,Je),e(Je,ma),e(P,_a),h(a,pt,c),h(a,C,c),e(C,ne),e(ne,ie),e(ie,p),e(p,ce),e(ce,ya),e(p,va),e(p,pe),e(pe,ba),e(p,Ea),e(p,ue),e(ue,wa),e(p,ja),e(p,he),e(he,Pa),e(p,Sa),e(p,fe),e(fe,Aa),e(p,Na),e(p,de),e(de,ka),e(p,ga),e(p,me),e(me,Ca),e(p,Ia),e(p,_e),e(_e,Ma),e(p,Ra),e(p,ye),e(ye,xa),e(p,Da),e(p,ve),e(ve,Oa),e(p,Wa),e(p,be),e(be,Fa),e(p,La),e(p,Ee),e(Ee,Ta),e(p,Va),e(p,we),e(we,Ba),e(p,Ga),e(p,je),e(je,qa),e(p,Ha),e(p,Pe),e(Pe,za),e(p,Xa),e(p,Se),e(Se,Ya),e(p,Za),e(p,Ae),e(Ae,Ja),e(p,Ka),e(p,Ne),e(Ne,Qa),e(p,Ua),e(p,ke),e(ke,$a),e(p,es),e(p,ge),e(ge,ts),e(p,as),e(p,Ce),e(Ce,ss),e(p,ls),e(p,Ie),e(Ie,rs),e(p,os),h(a,ut,c),h(a,b,c),e(b,ns),e(b,Ke),e(Ke,is),e(b,cs),e(b,Qe),e(Qe,ps),e(b,us),e(b,Ue),e(Ue,hs),e(b,fs),h(a,ht,c),h(a,I,c),e(I,Me),e(Me,Re),e(Re,y),e(y,M),e(M,ds),e(M,xe),e(xe,ms),e(y,_s),e(y,De),e(De,ys),e(y,vs),e(y,Oe),e(Oe,bs),e(y,w),e(w,Es),e(w,We),e(We,ws),e(w,js),e(w,Fe),e(Fe,Ps),e(w,Ss),e(y,As),e(y,Le),e(Le,Ns),e(y,ks),e(y,Te),e(Te,gs),e(y,Cs),h(a,ft,c),h(a,Ve,c),e(Ve,Is),h(a,dt,c),h(a,Be,c),e(Be,Ge),h(a,mt,c),h(a,qe,c),e(qe,Ms),h(a,_t,c),h(a,He,c),e(He,ze),h(a,yt,c),h(a,S,c),e(S,Rs),e(S,R),e(R,xs),e(S,Ds),h(a,vt,c),h(a,Xe,c),e(Xe,Os),h(a,bt,c),h(a,x,c),e(x,$e),e($e,Ws),e(x,Fs)},p:Vs,i:Vs,o:Vs,d(a){a&&t(v),a&&t(et),a&&t(O),a&&t(tt),a&&t(g),a&&t(at),a&&t(j),a&&t(st),a&&t($),a&&t(lt),a&&t(ee),a&&t(rt),a&&t(te),a&&t(ot),a&&t(ae),a&&t(nt),a&&t(le),a&&t(it),a&&t(re),a&&t(ct),a&&t(P),a&&t(pt),a&&t(C),a&&t(ut),a&&t(b),a&&t(ht),a&&t(I),a&&t(ft),a&&t(Ve),a&&t(dt),a&&t(Be),a&&t(mt),a&&t(qe),a&&t(_t),a&&t(He),a&&t(yt),a&&t(S),a&&t(vt),a&&t(Xe),a&&t(bt),a&&t(x)}}}const vr={comments:!1,date:"2009-05-06T00:00:00Z",section:"blog",tags:["ruby"],title:"Macruby Support in any Cocoa Application"};class br extends fr{constructor(v){super(),dr(this,v,null,_r,mr,{})}}export{br as default,vr as metadata};
